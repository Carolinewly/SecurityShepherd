name: Release to Dockerhub
on:
  push:
    paths-ignore:
      - '**.md'
#  pull_request:
#    types:
#      - closed
#    branches: [master, dev]
#    paths-ignore:
#      - '**.md'
#      - '.github/ISSUE_TEMPLATE'
#      - '.gitignore'
#      - 'provisioning'
#      - '.sonarcloud.properties'
#      - 'LICENSE'
#      - 'Vagrantfile'

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build Maven with Docker Profile
        run: mvn clean install -Pdocker -DskipTests -B
      - name: Docker Compose Build
        run: docker-compose build
      - uses: actions/upload-artifact@v3
        with:
          name: War File
          path: target/*.war

  release-tomcat:
    needs: build
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ismisepaul/security-shepherd

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Dump the environment variables from the dotenv file so they can be used to build the tomcat server
      - name: Set environment variables
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - name: Build and push Tomcat
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TOMCAT_DOCKER_VERSION
            TLS_KEYSTORE_FILE
            TLS_KEYSTORE_PASS
            ALIAS
            HTTPS_PORT
            

  release-mariadb:
    needs: build
    #    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ismisepaul/security-shepherd_mariadb

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Dump the environment variables from the dotenv file so they can be used to build the tomcat server
      - name: Set environment variables
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - name: Build and push MariaDb
        uses: docker/build-push-action@v2
        with:
          context: docker/mariadb/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DB_VERSION
            DB_BIND_ADDRESS

  release-mongodb:
    needs: build
    #    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ismisepaul/security-shepherd_mongodb

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set environment variables
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - name: Build and push MongoDb
        uses: docker/build-push-action@v2
        with:
          context: docker/mongo/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MONGODB_VERSION
            MONGO_BIND_ADDRESS


